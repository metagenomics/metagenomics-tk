
params {
   megahit_tag = "release-v1.2.9"
   metaspades_tag = "3.15.2--h95f258a_1"
   bowtie_tag = "0.11.0"
   metabat_tag = "v2.15-4-ga101cde"
   maxbin_tag = "2.2.7--he1b5a44_1"
   checkm_tag = "0.12.0"
   gtdbtk_tag = "1.4.1"
   prokka_tag = "1.14.5"
   trimmomatic_tag = "0.39--hdfd78af_2"
   fastp_tag = "0.20.1--h2e03b76_1"
   bbmap_tag = "38.90--he522d1c_1"
   mash_tag = "2.2.2--h3d38be6_1"
   python_env_tag = "0.1.1"
   ani_tag = "v0.2.9"
   bwa_tag = "0.7.17--h5bf99c6_8"
   samtools_bwa_tag = "0.13.1"
}

timeline {
 enabled = true
 file = "log/timeline.html"
}

report {
 enabled = true
 file = "log/report.html"
}

dag {
 enabled =true
 file = "log/dag.dot"
}

trace {
 enabled = true
 file = "log/trace.tsv"
}

profiles {
    slurm {  
        executor {
          queueSize = 600
          pollInterval = '5 sec'
          queueStatInterval = '5 sec'
        }
        docker {
           fixOwnership = true
           enabled = true
         }
        process {
           executor = 'slurm'
           containerOptions = ' --user 1000:1000 '
           scratch = "/vol/scratch/"

           withLabel: large {
              cpus = 28 
           }
           withLabel: medium {
              cpus = 14
           }
           withLabel: small {
              cpus = 7
           }
           withLabel: tiny {
              cpus = 1
          }

     	}

    }
    local { 
         docker {
           fixOwnership = true
           enabled = true
         }
         process {
           executor = 'local'
           containerOptions = ' --user 1000:1000 '
           scratch = false

           withLabel: large {
              cpus = 28 
           }
           withLabel: medium {
              cpus = 14
           }
           withLabel: small {
              cpus = 7
           }
           withLabel: tiny {
              cpus = 1
          }
        }
    }
    conda {
         conda.createTimeout = '1 h'
         process.conda = { params.environment ? params.environment : "$projectDir/conda/environment.yml" }
    }
}

includeConfig 'aws.config'
