
params {

   megahit_image = "vout/megahit:release-v1.2.9"
   bowtie_image = "pbelmann/bowtie2:0.11.0"
   metabat_image = "metabat/metabat:v2.15-4-ga101cde"
   maxbin_image = "quay.io/biocontainers/maxbin2:2.2.7--he1b5a44_1"
   checkm_image = "pbelmann/checkm:0.12.0"
   gtdbtk_image = "ecogenomic/gtdbtk:1.5.0"
   prokka_image = "quay.io/biocontainers/prokka:1.14.5"
   fastp_image = "quay.io/biocontainers/fastp:0.20.1--h2e03b76_1"
   mash_image = "quay.io/biocontainers/mash:2.3--he348c14_1"
   python_env_image = "pbelmann/python-env:0.13.5"
   ani_image = "leightonpritchard/average_nucleotide_identity:v0.2.9"
   bwa_image = "quay.io/biocontainers/bwa:0.7.17--h5bf99c6_8"
   samtools_bwa_image = "pbelmann/bwa-samtools:0.13.3"
   samtools_image = "quay.io/biocontainers/samtools:1.12--h9aed4be_1"
   prokka_image = "quay.io/biocontainers/prokka:1.14.6--pl5262hdfd78af_1"
   cmseq_image = "pbelmann/cmseq:0.3.0"
   metabinner_image = "quay.io/biocontainers/metabinner:1.4.2--hdfd78af_0"
   cooccurrence_image = "pbelmann/cooccurrence:0.1.6"

   modules {
      config {
         name = "config"
         version {
                major = 0 
                minor = 1
                patch = 0
         }
      }
      magAttributes {
         name = "magAttributes"
         version {
                major = 1 
                minor = 0
                patch = 0
         }
      }
      qc {
         name = "qc"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      assembly {
         name = "assembly"
         version {
                major = 1 
                minor = 1
                patch = 0
         }
      }
      binning {
         name = "binning"
         version {
                major = 0
                minor = 2
                patch = 0
         }
      }
      dereplication {
         name = "dereplication"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      fragmentRecruitment {
         name = "fragmentRecruitment"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      metabolomics {
         name = "metabolomics"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      readMapping {
         name = "readMapping"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      sampleAnalysis {
         name = "sampleAnalysis"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
      cooccurrence {
         name = "cooccurrence"
         version {
                major = 0
                minor = 1
                patch = 0
         }
      }
   }
}



timeline {
 enabled = true
 file = "log/timeline.html"
}

report {
 enabled = true
 file = "log/report.html"
}

dag {
 enabled =true
 file = "log/dag.dot"
}

trace {
 enabled = true
 file = "log/trace.tsv"
}

profiles {
    slurm {  
        executor {
          queueSize = 600
          pollInterval = '5 sec'
          queueStatInterval = '5 sec'
        }
        docker {
           fixOwnership = true
           enabled = true
         }
        process {
           executor = 'slurm'
           containerOptions = ' --user 1000:1000 '
           scratch = "/vol/scratch/"

           withLabel: large {
              cpus = 28 
           }
           withLabel: medium {
              cpus = 14
           }
           withLabel: small {
              cpus = 7
           }
           withLabel: tiny {
              cpus = 1
          }
     	}

    }
    local { 
         docker {
           fixOwnership = true
           enabled = true
         }
         process {
           executor = 'local'
           containerOptions = ' --user 1000:1000 '
           scratch = false

           withLabel: large {
              cpus = 28 
           }
           withLabel: medium {
              cpus = 14
           }
           withLabel: small {
              cpus = 7
           }
           withLabel: tiny {
              cpus = 1
          }
        }
    }
    conda {
         conda.createTimeout = '1 h'
         process.conda = { params.environment ? params.environment : "$projectDir/conda/metabolic.yml" }
         withName: 'pBwaIndex|pMapBwa|pMapBwaCami' {
             conda 'bioconda::bwa=0.7.17'
         }
    }
}


manifest {
  version = "0.2.2"
  name = "Meta-Omics-Toolkit"
}
