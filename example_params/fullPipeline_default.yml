tempdir: "tmp"
summary: false
input:
  paired:
    path: "test_data/fullPipeline/reads_split.tsv"
    watch: false
output: "output"
logDir: log
runid: 1
databases: "/mnt/databases"
logLevel: 1
scratch: "/vol/scratch"
steps:
  qc:
    fastp:
       # For PE data, the adapter sequence auto-detection is disabled by default since the adapters can be trimmed by overlap analysis. However, you can specify --detect_adapter_for_pe to enable it.
       # For PE data, fastp will run a little slower if you specify the sequence adapters or enable adapter auto-detection, but usually result in a slightly cleaner output, since the overlap analysis may fail due to sequencing errors or adapter dimers.
       # -q, --qualified_quality_phred       the quality value that a base is qualified. Default 15 means phred quality >=Q15 is qualified.
       # --cut_front move a sliding window from front (5') to tail, drop the bases in the window if its mean quality is below cut_mean_quality, stop otherwise.
       # --length_required  reads shorter than length_required will be discarded, default is 15. (int [=15])
       # Also do a hard cut! 
       additionalParams: " --detect_adapter_for_pe -q 20 --cut_front --cut_tail --cut_mean_quality 10 --length_required 50 "
  assembly:
    megahit:
      # --mem-flag 0 to use minimum memory, --mem-flag 1 (default) moderate memory and --mem-flag 2 all memory.
      # meta-sensitive: '--min-count 1 --k-list 21,29,39,49,...,129,141' 
      # meta-large:  '--k-min  27  --k-max 127 --k-step 10' (large & complex metagenomes, like soil)
      additionalParams: " --min-contig-len 1000 --presets meta-sensitive "
      fastg: true
  binning:
    bowtie:
      additionalParams: 
        bowtie: " --quiet --very-sensitive "
        # samtools flags are used to filter resulting bam file
        samtoolsView: " -F 3584 " 
    contigsCoverage:
      additionalParams: ""
    metabat:
      # Set --seed positive numbers to reproduce the result exactly. Otherwise, random seed will be set each time.
      additionalParams: " --seed 234234  "
  magAttributes:
    # gtdbtk classify_wf
    # --min_af minimum alignment fraction to assign genome to a species cluster (0.5)
    gtdb:
      buffer: 1000
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/gtdb.tar.gz
          md5sum: f57c74e7b2d7ebf8b294ac25b913318f
      additionalParams: " --min_af 0.65 "
    # checkm lineage_wf
    checkm:
      database:
        download:
                # Use Version number in databse names
          source: "https://openstack.cebitec.uni-bielefeld.de:8080/databases/checkm_data_2015_01_16.tar.gz"
          md5sum: 0963b301dfe9345ea4be1246e32f6728
      buffer: 200
      additionalParams:
        tree: " --reduced_tree "
        lineage_set: " " 
        qa: "  "
  fragmentRecruitment:
    frhit:
      genomes: "/vol/spool/meta/test/data/bin.*.fa"
      sort: true
      additionalParams:
        # More interested in more remote hits
        # Are output files to big for higher c's and more inputs ?  
        frhit: " -c 75 "
        coverm: " --min-covered-fraction 0 "
  dereplication:
    pasolli:
      minimumCompleteness: 0
      maximumContamination: 5000
      ANIBuffer: 20
      mashBuffer: 2000
      method: 'ANI'
      additionalParams:
        mash_sketch: ""
        mash_dist: ""
        # cluster cutoff
        cluster: " -c 0.05 "
        pyani: " -m ANIb "
        representativeAniCutoff: 0.95
  readMapping:
    bwa:
      additionalParams:
        bwa_index: ""
        bwa_mem: ""
        coverm: " --min-covered-fraction 0 "
  cooccurrence:
    additionalParams: " -t 0.1 -z 80 -o 'correlation' "
  plasmid:
    SCAPP:
      additionalParams: 
        SCAPP: "  "
        bowtie: "  "
        coverm: "  "
    ViralVerifyPlasmid:
      filter: true
      filterString: "Uncertain - plasmid or chromosomal|Plasmid"
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/pfam.hmm.gz
          md5sum: c80b75bd48ec41760bbca19c70616e36
      additionalParams: " --thr 7 "
    MobTyper:
      filter: true
      minLength: 5000
      additionalParams: " --min_length 9000  "
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/mob_suite.tar.gz
          md5sum: ed67193666c95738123e696f40df6172
    Platon:
      filter: false
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/platon.tar.gz
          md5sum: f6d1701704396182c6c9daca053eb9d6
      additionalParams: "   "
    PlasClass:
      filter: true
      threshold: 0.5 
      additionalParams: "   "
    Filter:
      method: "AND"
      minLength: 0 
    PLSDB:
      sharedKmerThreshold: 30
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/plsdb.zip
          md5sum: 52c65f4f1e8024a78743ac0972395c56
      additionalParams:
        mashSketch: " -S 42 -k 21 -s 1000 "
        mashDist: " -v 0.2 -d 0.2 "
  annotation:
    prokka:
      prodigalMode: "meta"
      defaultKingdom: 'Bacteria'
      additionalParams: " --mincontiglen 200 "
    mmseqs2:
      kegg:
        # -s 6 with 2 iterations
        params: 'blastp --fast --outfmt 6 --max-target-seqs 100 --evalue 0.1'
        database:
          extractedDBPath: '/vol/spool/biogas/databases/kegg-mirror-2021-01_mmseqs/sequenceDB'
      vfdb:
        params: 'blastp --fast --outfmt 6 --max-target-seqs 100 --evalue 0.1'
        database:
          extractedDBPath: '/vol/spool/toolkit/vfdb_out.dmnd'
      bacmet:
        params: 'blastp --fast --outfmt 6 --max-target-seqs 100 --evalue 0.1'
        database:
          extractedDBPath: '/vol/spool/toolkit/bacmet_out.dmnd'
    rgi:
      additionalParams: ""
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/data
          md5sum: 2a1e01f01e904ed6e126b5ac162764c8
    keggFromMMseqs2:
      database:
        extractedDBPath: "/vol/spool/biogas/databases/kegg_2021-01/" 

resources:
  large:
    cpus: 28
    memory: 246
  medium:
    cpus: 14
    memory: 121
  small:
    cpus: 7
    memory: 14
  tiny:
    cpus: 1
    memory: 1
