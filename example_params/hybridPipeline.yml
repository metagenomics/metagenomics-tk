tempdir: "tmp"
summary: false
s3SignIn: false
input:
  hybrid:
    path: "test_data/fullPipeline/hybrid.tsv"
    watch: false
output: "output"
logDir: log
runid: 1
databases: "/mnt/databases"
logLevel: 1
scratch: "/vol/scratch"
publishDirMode: "symlink"
steps:
  qc:
    fastp:
       # Example params: " --cut_front --cut_tail --detect_adapter_for_pe  "
       additionalParams: "  "
       timeLimit: "AUTO"
    nonpareil:
       additionalParams: " -v 10 -r 1234 "
    kmc:
       timeLimit: "AUTO"
       additionalParams: 
         count: " -sm -cs10000 "
         histo: " "
  qcONT:
    porechop:
       additionalParams:
         porechop: ""
         filtlong: " --min_length 500 --keep_percent 90  "
    bbduk:
      additionalParams: " entropy=0.8 entropywindow=50 entropyk=5 " 
    nanoplot:
      additionalParams: ""
  assemblyHybrid:
    metaspades:
      additionalParams: "  "
      fastg: true
    # metaflye:
    #   additionalParams: " -i 1 "
    #   quality: " --nano-raw "
    # minimap:
    #   additionalParams:
    #     minimap_index: ""
    #     minimap: ""
    # racon:
    #   additionalParams: ""
    # medaka:
    #   model: "r941_min_high_g303"
    #   additionalParams: ""
    # bwa2:
    #   additionalParams:
    #     bwa2_index: ""
    #     bwa2_mem: ""
    # pilon:
    #   additionalParams: ""
  binningHybrid:
    bwa2:
      additionalParams: 
        bwa2: "   "
        # samtools flags are used to filter resulting bam file
        samtoolsView: "  -F 3584  "
    minimap:
      additionalParams: 
        minimap: "   "
        # samtools flags are used to filter resulting bam file
        samtoolsView: "  -F 3584  "
    metabat:
      additionalParams: " --seed 234234  "
    contigsCoverage:
      additionalParams: ""
  magAttributes:
    gtdb:
      buffer: 1000
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/gtdbtk_v2_data.tar.gz
          md5sum: c42a6517bc6c14f517fa2c77121ae465
      additionalParams: " --min_af 0.65 --scratch_dir . "
    checkm:
      database:
        download:
          source: "https://openstack.cebitec.uni-bielefeld.de:8080/databases/checkm_data_2015_01_16.tar.gz"
          md5sum: 0963b301dfe9345ea4be1246e32f6728
      buffer: 200
      additionalParams:
        tree: " --reduced_tree "
        lineage_set: " " 
        qa: "  "
#  fragmentRecruitment:
#    mashScreen:
#      genomes: test_data/fragmentRecruitment/mags.tsv
#      additionalParams:
#        mashSketch: " "
#        mashScreen: " "
#        bwa2: " "
#        coverm: "  --min-covered-fraction 5  "
#        minimap: "  "
#        samtoolsViewBwa2: " -F 3584 " 
#        samtoolsViewMinimap: " " 
#      mashDistCutoff: 0.95
#      coveredBasesCutoff: 0.2
#      mashHashCutoff: 800
#    genomeCoverage:
#      additionalParams: ""
#    contigsCoverage:
#      additionalParams: ""
#  dereplication:
#    bottomUpClustering:
#      minimumCompleteness: 0
#      maximumContamination: 5000
#      ANIBuffer: 20
#      mashBuffer: 2000
#      method: 'ANI'
#      additionalParams:
#        mash_sketch: ""
#        mash_dist: ""
#        # cluster cutoff
#        cluster: " -c 0.05 "
#        pyani: " -m ANIb "
#        representativeAniCutoff: 0.95
#  readMapping:
#    bwa2:
#      additionalParams:
#        bwa2_index: ""
#        bwa2_mem: ""
#    coverm:
#      additionalParams: " --min-covered-fraction 0 "
#  cooccurrence:
#    inference:
#      additionalParams: 
#        method: 'correlation'
#        rscript: " --mincovthreshold 0.1 --maxzero 80 --minweight 0.4 "
#        timeLimit: "AUTO"
#    metabolicAnnotation:
#      additionalParams:
#        metabolicEdgeBatches: 20
#        metabolicEdgeReplicates: 3
#        smetana: " --molweight "

  plasmid:
    SCAPP:
      additionalParams:
        bwa2: "  "
        SCAPP: "  "
        coverm: " --min-covered-fraction 0 "
        minimap: " "
        samtoolsViewBwa2: " -F 3584 " 
        samtoolsViewMinimap: " " 
    ViralVerifyPlasmid:
      filter: true
      # Select sequences that are labeled as uncertain or plasmid id ViralVerifies output
      filterString: "Uncertain - plasmid or chromosomal|Plasmid"
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/pfam-A_35.0.hmm.gz
          md5sum: c80b75bd48ec41760bbca19c70616e36
      additionalParams: " --thr 7 "
    PlasClass:
      filter: true
      # A cutoff of 0.9 for longer (> 2 kb) sequences should pretty much yield only plasmids.
      threshold: 0.9
      additionalParams: "   "
    Filter:
      method: "OR"
      minLength: 1000 
    PLSDB:
      sharedKmerThreshold: 0
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/plasmids_plsdb_20220929.tar.bz2
          md5sum: 13c1078e6cd6a46e3f508c24ca07cc18
      additionalParams:
     # Parameters according to plsdb paper
     # -s: Sketch size
     # -k: k-mer size
     # -S: Seed to provide to the hash function
     # -d: Maximum distance to report
     # -v: Maximum p-value to report
        mashSketch: " -S 42 -k 21 -s 1000 "
        mashDist: " -v 0.1 -d 0.1 "
    MobTyper:
      filter: true
      minLength: 1000
      additionalParams: " --min_length 1000  "
      database:
        download:
          source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/mob_20220929.gz
          md5sum: 21fcaf9c3754a985d1d6875939d71e28

  # annotation:
  #   prokka:
  #     prodigalMode: "meta"
  #     defaultKingdom: false
  #     additionalParams: " --mincontiglen 200 "
  #   mmseqs2:
  #     kegg:
  #       params: ' --max-seqs 100 --max-accept 50 --alignment-mode 1 --exact-kmer-matching 1 --db-load-mode 3'
  #       database:
  #         extractedDBPath: '/mnt/databases/kegg-mirror-2021-01_mmseqs/sequenceDB'

  #     vfdb:
  #       params: ' --max-seqs 100 --max-accept 50 --alignment-mode 1 --exact-kmer-matching 1 --db-load-mode 3'
  #       database:
  #         download:
  #           source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/vfdb_full_2022_07_29.tar.zst
  #           md5sum: 7e32aaed112d6e056fb8764b637bf49e
  #     bacmet20_experimental:
  #       params: ' --max-seqs 100 --max-accept 50 --alignment-mode 1 --exact-kmer-matching 1 --db-load-mode 3'
  #       database:
  #         download:
  #           source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/bacmet20_experimental.tar.zst
  #           md5sum: 57a6d328486f0acd63f7e984f739e8fe
  #     bacmet20_predicted:
  #       params: ' --max-seqs 100 --max-accept 50 --alignment-mode 1 --exact-kmer-matching 1 --db-load-mode 3'
  #       database:
  #         download:
  #           source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/bacmet20_predicted.tar.zst
  #           md5sum: 55902401a765fc460c09994d839d9b64
  #   rgi:
  #     additionalParams: ""
  #     database:
  #       download:
  #         source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/card_20221209.tar.bz2
  #         md5sum: d7e627221a1d4584d1c1795cda774cdb
  #   mmseqs2_taxonomy:
  #     runOnMAGs: true
  #     ncbi_nr:
  #       params: ' --lca-ranks superkingdom,phylum,class,order,family,genus,species,subspecies --max-seqs 300 --max-accept 50 --cov-mode 0 -e 0.001 --e-profile 0.01 '
  #       database:
  #         download:
  #           source: https://openstack.cebitec.uni-bielefeld.de:8080/databases/nr_2022-04-02_mmseqs_taxonomy.tar.zst
  #           md5sum: 184bb8207ee1575cae7756137cde076b
  #   keggFromBlast:
  #     database:
  #       extractedDBPath: "/vol/spool/toolkit/kegg_2021-01/" 


#  metabolomics:
#     beforeProcessScript: ""
#     input:
#       bins: "test_data/metabolomics/input.tsv" 
#     filter:
#       minCompleteness: 49
#       maxContamination: 5
#     gapseq:
#       additionalParams: ""
#     smetana:
#       global: false
#       detailed: false
#       additionalParams:
#         detailed: ""
#         global: ""
#     memote:
#       additionalParams:
#         run: ""
#         report: ""
resources:
  highmemLarge:
    cpus: 28
    memory: 230
  highmemMedium:
    cpus: 14
    memory: 113
  large:
    cpus: 28
    memory: 58
  medium:
    cpus: 14
    memory: 29
  small:
    cpus: 7
    memory: 14
  tiny:
    cpus: 1
    memory: 1

